/* Copyright (c) 2025 Rick (rick 'at' gibbed 'dot' us)
 *
 * This software is provided 'as-is', without any express or implied
 * warranty. In no event will the authors be held liable for any damages
 * arising from the use of this software.
 *
 * Permission is granted to anyone to use this software for any purpose,
 * including commercial applications, and to alter it and redistribute it
 * freely, subject to the following restrictions:
 *
 * 1. The origin of this software must not be misrepresented; you must not
 *    claim that you wrote the original software. If you use this software
 *    in a product, an acknowledgment in the product documentation would
 *    be appreciated but is not required.
 *
 * 2. Altered source versions must be plainly marked as such, and must not
 *    be misrepresented as being the original software.
 *
 * 3. This notice may not be removed or altered from any source
 *    distribution.
 */

using System;

namespace Gibbed.IvaliceChronicles.ScriptFormats
{
    public static class OpcodeHelpers
    {
        public static int GetClassicSize(this Opcode opcode) => opcode switch
        {
            Opcode.Unknown00 => 0,
            Opcode.Unknown01 => 0,
            Opcode.Unknown02 => 0,
            Opcode.Unknown03 => 0,
            Opcode.Unknown04 => 0,
            Opcode.Unknown05 => 0,
            Opcode.Unknown06 => 0,
            Opcode.Unknown07 => 0,
            Opcode.Unknown08 => 0,
            Opcode.Unknown09 => 0,
            Opcode.Unknown0A => 0,
            Opcode.Unknown0B => 0,
            Opcode.Unknown0C => 0,
            Opcode.Unknown0D => 0,
            Opcode.Unknown0E => 0,
            Opcode.Unknown0F => 0,
            Opcode.MessagePutMain => 14,
            Opcode.AnimationRequest => 5,
            Opcode.WaitAnimationEnd => 2,
            Opcode.JumpMap => 2,
            Opcode.Unknown14 => 2,
            Opcode.Unknown15 => 0,
            Opcode.WaitTask => 0,
            Opcode.Unknown17 => 5,
            Opcode.ChangeEffect => 6,
            Opcode.MoveCamera => 16,
            Opcode.MoveAmbient => 5,
            Opcode.MoveLight => 14,
            Opcode.ChangeFrameRate => 1,
            Opcode._CameraFusionStart => 0,
            Opcode._CameraFusionEnd => 0,
            Opcode._Focus => 5,
            Opcode.Unknown20 => 6,
            Opcode.PlaySound => 2,
            Opcode.PlayMusic => 3,
            Opcode.Unknown23 => 3,
            Opcode.Unknown24 => 0,
            Opcode.Unknown25 => 4,
            Opcode.Unknown26 => 2,
            Opcode.RewriteMap => 0,
            Opcode.MoveToPanel => 8,
            Opcode.WaitCharacterMove => 2,
            Opcode._BlockStart => 0,
            Opcode._BlockEnd => 0,
            Opcode.Direction2_0 => 7,
            Opcode.Direction => 6,
            Opcode.FadeGradation => 8,
            Opcode.Unknown2F => 0,
            Opcode.Unknown30 => 0,
            Opcode.ChangeGradation => 5,
            Opcode.SetCharacterColor => 7,
            Opcode.ChangeMapClut => 5,
            Opcode.Unknown34 => 2,
            Opcode.Unknown35 => 4,
            Opcode.Unknown36 => 2,
            Opcode.Unknown37 => 2,
            Opcode._FocusSpeed => 2,
            Opcode.WaitCharacterMoveWotL => 0,
            Opcode.WaitFileRead => 0,
            Opcode.MoveSprite => 12,
            Opcode.ChangeWeather => 2,
            Opcode.DisappearUnit => 2,
            Opcode.SetChangePaletteData => 9,
            Opcode.ChangeMapD => 4,
            Opcode.ChangeMapSTP => 5,
            Opcode.StartShake => 4,
            Opcode.StopShake => 0,
            Opcode._CallFunction => 1,
            Opcode._Draw => 2,
            Opcode.LoadAnimation => 3,
            Opcode.DeactivateAnimation => 2,
            Opcode.ActivateAnimation => 8,
            Opcode.WaitLoadAnimation => 0,
            Opcode.ActivateAnimationStart => 0,
            Opcode.ActivateAnimationEnd => 0,
            Opcode.WaitActivateAnimation => 0,
            Opcode.JumpMap2 => 2,
            Opcode._Reveal => 1,
            Opcode.SetAnimationShadow => 3,
            Opcode.SetDaytime => 1,
            Opcode.SetFace => 1,
            Opcode._ChangeDialog => 5,
            Opcode.Unknown52 => 2,
            Opcode.Direction2_1 => 7,
            Opcode.StartModelAnimation => 2,
            Opcode.StartVRAMAnimation => 2,
            Opcode.WaitModelAnimation => 0,
            Opcode.WaitVRAMAnimation => 0,
            Opcode.LoadEventCharacter => 3,
            Opcode.ActivateEventCharacter => 1,
            Opcode.DeactivateEventCharacter => 1,
            Opcode.DisposeEventCharacter => 1,
            Opcode.ActivateCompressedAnimation => 3,
            Opcode.DeactivateCompressedAnimation => 1,
            Opcode.DisposeMusic => 1,
            Opcode.SetAnimationPosition => 6,
            Opcode.FadeMusic => 2,
            Opcode.Unknown61 => 3,
            Opcode.Unknown62 => 6,
            Opcode.SetMoveCameraFlags => 1,
            Opcode.WaitDirection => 2,
            Opcode.WaitDirectionAll => 0,
            Opcode.SetPresentClutDataAsDefault => 0,
            Opcode.Unknown67 => 2,
            Opcode.SetAnimationHorizontalFlip => 3,
            Opcode.Direction4 => 8,
            Opcode.FadeSoundEffect => 5,
            Opcode.PlaySoundEffect => 5,
            Opcode.SetAnimationColorChangeOff => 2,
            Opcode.SetAnimationColorChangeOn => 2,
            Opcode.MoveSprite2 => 12,
            Opcode.WaitMoveSprite => 2,
            Opcode.JumpToPanel => 4,
            Opcode.RaiseAnimationPriority => 2,
            Opcode.ForceStop => 0,
            Opcode.Unknown73 => 14,
            Opcode.Unknown74 => 6,
            Opcode.Unknown75 => 6,
            Opcode.StartWipe => 6,
            Opcode.StopWipe => 0,
            Opcode._DisplayConditions => 2,
            Opcode._WalkToAnim => 4,
            Opcode.EraseUnit => 2,
            Opcode.Unknown7B => 2,
            Opcode.StopAllEffects => 0,
            Opcode.DisplayChapter => 1,
            Opcode.WaitEventFlag => 4,
            Opcode.SetEventCharacterClut => 4,
            Opcode.RequestStandardAnimation => 3,
            Opcode.SetAnimationSoundOnOff => 3,
            Opcode.Unknown82 => 0,
            Opcode._ChangeStats => 5,
            Opcode.PlayJingle => 1,
            Opcode.ChangeTreasureFindDay => 1,
            Opcode.EquipWeapon => 3,
            Opcode.UseGun => 4,
            Opcode.RestartMapPaletteAnimation => 0,
            Opcode.StopMapPaletteAnimation => 0,
            Opcode.WaitEffectLoad => 0,
            Opcode.PlayEffect => 0,
            Opcode.SetAnimationFlipDirection => 6,
            Opcode.Unknown8D => 0,
            Opcode.WaitDisplayChapter => 0,
            Opcode.Unknown8F => 1,
            Opcode.WaitActivePanel => 3,
            Opcode.DisplayMapTitle => 3,
            Opcode._InflictStatus => 5,
            Opcode.Unknown93 => 2,
            Opcode.TeleportOut => 2,
            Opcode.Unknown95 => 0,
            Opcode._AppendMapState => 0,
            Opcode.SetAnimationBrightColor => 2,
            Opcode.TeleportIn => 2,
            Opcode._BlueRemoveUnit => 2,
            Opcode.Unknown9A => 0,
            Opcode.Unknown9B => 0,
            Opcode.Unknown9C => 0,
            Opcode.Unknown9D => 0,
            Opcode.Unknown9E => 0,
            Opcode.Unknown9F => 0,
            Opcode.LessThanEquals => 0,
            Opcode.GreaterThanEquals => 0,
            Opcode.Equals => 0,
            Opcode.NotEquals => 0,
            Opcode.LessThan => 0,
            Opcode.GreaterThan => 0,
            Opcode.UnknownA6 => 4,
            Opcode.UnknownA7 => 4,
            Opcode.UnknownA8 => 6,
            Opcode.UnknownA9 => 6,
            Opcode.UnknownAA => 1,
            Opcode.UnknownAB => 4,
            Opcode.UnknownAC => 4,
            Opcode.UnknownAD => 8,
            Opcode.UnknownAE => 8,
            Opcode.UnknownAF => 4,
            Opcode.Add => 4,
            Opcode.AddVar => 4,
            Opcode.Sub => 4,
            Opcode.SubVar => 4,
            Opcode.Mul => 4,
            Opcode.MulVar => 4,
            Opcode.Div => 4,
            Opcode.DivVar => 4,
            Opcode.Mod => 4,
            Opcode.ModVar => 4,
            Opcode.And => 4,
            Opcode.AndVar => 4,
            Opcode.Or => 4,
            Opcode.OrVar => 4,
            Opcode.Zero => 2,
            Opcode.UnknownBF => 0,
            Opcode.UnknownC0 => 16,
            Opcode.UnknownC1 => 0,
            Opcode.UnknownC2 => 4,
            Opcode.UnknownC3 => 2,
            Opcode.UnknownC4 => 12,
            Opcode.UnknownC5 => 8,
            Opcode.UnknownC6 => 8,
            Opcode.UnknownC7 => 16,
            Opcode.UnknownC8 => 8,
            Opcode.UnknownC9 => 1,
            Opcode.UnknownCA => 1,
            Opcode.UnknownCB => 8,
            Opcode.UnknownCC => 12,
            Opcode.UnknownCD => 8,
            Opcode.UnknownCE => 1,
            Opcode.UnknownCF => 0,
            Opcode.SeekCodeForwardIfZero => 1,
            Opcode.SeekCodeForward => 1,
            Opcode.SeekCodeForwardTarget => 1,
            Opcode.SeekCodeBackward => 1,
            Opcode.UnknownD4 => 1,
            Opcode.SeekCodeBackwardTarget => 1,
            Opcode.UnknownD6 => 0,
            Opcode.UnknownD7 => 0,
            Opcode.UnknownD8 => 1,
            Opcode.UnknownD9 => 1,
            Opcode.UnknownDA => 0,
            Opcode._EventEnd => 0,
            Opcode.UnknownDC => 0,
            Opcode.UnknownDD => 0,
            Opcode.UnknownDE => 0,
            Opcode.UnknownDF => 0,
            Opcode.UnknownE0 => 2,
            Opcode.UnknownE1 => 1,
            Opcode.UnknownE2 => 1,
            Opcode._EventEnd2 => 0,
            Opcode.UnknownE4 => 1,
            Opcode._WaitForInstruction => 2,
            Opcode.UnknownE6 => 0,
            Opcode.UnknownE7 => 4,
            Opcode.UnknownE8 => 1,
            Opcode.UnknownE9 => 8,
            Opcode.UnknownEA => 5,
            Opcode.UnknownEB => 6,
            Opcode.UnknownEC => 0,
            Opcode.UnknownED => 6,
            Opcode.UnknownEE => 4,
            Opcode.UnknownEF => 0,
            Opcode.UnknownF0 => 0,
            Opcode._Wait => 2,
            Opcode._Pad => 0,
            _ => throw new ArgumentOutOfRangeException(nameof(opcode)),
        };

        public static int GetEnhancedSize(this Opcode opcode) => GetClassicSize(opcode) + GetEnhancedExtraSize(opcode);

        public static int GetEnhancedExtraSize(this Opcode opcode) => opcode switch
        {
            Opcode.MessagePutMain => 3,
            Opcode._ChangeDialog => 2,
            Opcode.UnknownEB => 5,
            _ => 0,
        };

        public static int GetSize(this Opcode opcode, bool isEnhanced) => isEnhanced == false
            ? opcode.GetClassicSize()
            : opcode.GetEnhancedSize();
    }
}
